# Node lts version 16.14.0
# container for development
FROM node:16.14.0-alpine as development

RUN apk add --update gettext libintl \
 && cp /usr/bin/envsubst /usr/local/bin/envsubst \
 && apk del gettext

WORKDIR /app
ENV HOME /app

COPY docker-entrypoint.sh /
RUN chmod 755 /docker-entrypoint.sh

# Install npm packages
COPY package-lock.json package.json /app/
RUN npm install

# Copy src files
COPY pages/ /app/pages
COPY src/ /app/src
COPY styles/ /app/styles
COPY public/ /app/public
COPY .eslintrc.json index.html next.config.js tsconfig.json /app/

# Replace redirect url in Auth0Config file
RUN sed -i 's|http://localhost:3000|https://dev.onlylabs.io/app|g' /app/src/utils/Auth0Config.ts

EXPOSE 3000

# the entrypoint runs all commands.   this gets called as /docker-entrypoint.sh $CMD
# this entrypoint script does our config.js templating
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["npm","run","dev"]

# temp build container
FROM node:16.14.0-alpine as build
COPY --from=development /app /app
WORKDIR /app
# Run lint and build next static files
RUN npm run lint \
 && npm run build-export

# production container
FROM nginx:1.22.1-alpine as production
# FROM nginxinc/nginx-unprivileged:1.23-alpine as production

COPY --from=build /app/out /var/www
COPY --from=development /usr/local/bin/envsubst /usr/local/bin
COPY nginx.conf /etc/nginx/nginx.conf

COPY docker-entrypoint.sh /
RUN chmod 755 /docker-entrypoint.sh

WORKDIR /app
RUN chown -R nginx:nginx /app && chmod -R 755 /app && \
        chown -R nginx:nginx /var/cache/nginx && \
        chown -R nginx:nginx /var/log/nginx && \
        chown -R nginx:nginx /etc/nginx/conf.d
#RUN touch /var/run/nginx.pid && \
#        chown -R nginx:nginx /var/run/nginx.pid

RUN touch /etc/nginx/conf.d/default.conf /var/run/nginx.pid \
  && chown nginx /etc/nginx/conf.d/default.conf /var/run/nginx.pid

# always put these as low as possible, but before any USER setting
ARG GIT_REVISION=unknown
LABEL git-commit=$GIT_REVISION
RUN echo $GIT_REVISION > /version.txt

# WORKDIR /app
USER nginx
ENV PORT 8080
EXPOSE $PORT

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["nginx","-g","daemon off;"]
